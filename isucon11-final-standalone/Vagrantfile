# -*- mode: ruby -*-
# vi: set ft=ruby :

box = "ubuntu/focal64"

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = box

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.
  config.vm.provider "virtualbox" do |vb|
    vb.memory = "2048"
  end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   apt-get update
  #   apt-get install -y apache2
  # SHELL

  config.vm.provision "shell", inline: <<-SHELL
    set -ex

    export DEBIAN_FRONTEND=noninteractive
    apt-get update
    apt-get install -y --no-install-recommends ansible curl git

    GITDIR="/tmp/isucon11-final"
    rm -rf ${GITDIR}
    git clone --depth=1 https://github.com/isucon/isucon11-final.git ${GITDIR}
    (
      cd ${GITDIR}/provisioning/ansible

      # common
      mkdir -p /dev/shm/files-generated
      git rev-parse HEAD > /dev/shm/files-generated/REVISION
      sed -i -e '/name.*Unarchive/,/dest/d' -e '/name.*Create \\/tmp\\/isucon11-final/,/^$/s/^$/    recurse: yes/' roles/common/tasks/main.yml

      # bench
      sed -i -e '/InsecureSkipVerify/s/=.*/= true/' ../../benchmarker/main.go
      sed -i -e '/name.*Deploy.*benchmarker"/i - become_user: isucon\\n  args:\\n    chdir: /tmp/isucon11-final/benchmarker\\n  environment:\\n    PATH: "/home/isucon/local/go/bin:{{ ansible_env.PATH }}"\\n  shell: make\\n' -e 's@/dev/shm/files-generated@/tmp/isucon11-final/benchmarker/bin@' roles/bench/tasks/bench.yml

      # contestant
      openssl x509 -in <(openssl req -subj '/CN=*.t.isucon.dev' -nodes -newkey rsa:2048 -keyout roles/contestant/files/etc/nginx/certificates/tls-key.pem) -req -signkey roles/contestant/files/etc/nginx/certificates/tls-key.pem -sha256 -days 3650 -out roles/contestant/files/etc/nginx/certificates/tls-cert.pem -extfile <(echo -e "basicConstraints=critical,CA:true,pathlen:0\nsubjectAltName=DNS.1:*.t.isucon.dev")
      ansible-playbook -i standalone.hosts --connection=local site.yml

      mkdir -p /usr/share/ca-certificates/isucon
      cp /etc/nginx/certificates/tls-cert.pem /usr/share/ca-certificates/isucon
      echo "isucon/tls-cert.pem" >> /etc/ca-certificates.conf
      update-ca-certificates
    )
    rm -rf ${GITDIR}

    apt-get remove -y --purge ansible
    apt-get autoremove -y
    systemctl restart isucholar.go
  SHELL
end
